# <addr>:<port> to query auth server (may be given multiple times)
# auth-http-address = []

# address that will be registered with lookupd (defaults to the OS hostname)
# broadcast-address = ""

# path to store disk-backed messages
# data-path = ""

# enable deflate feature negotiation (client compression)
deflate = true

#  message processing time percentiles (as float (0, 1.0]) to track (can be specified multiple times or comma separated '1.0,0.99,0.95', default none)
# e2e-processing-latency-percentile = 

# calculate end to end latency quantiles for this duration of time (ie: 60s would only show quantile calculations from the past 60 seconds)
# e2e-processing-latency-window-time = 

# <addr>:<port> to listen on for HTTP clients
http-address = "0.0.0.0:151"

# <addr>:<port> to listen on for HTTPS clients
# https-address = ""

# lookupd TCP address (may be given multiple times)
# lookupd-tcp-address = []

# maximum size of a single command body
max-body-size = 5123840

# number of bytes per diskqueue file before rolling
max-bytes-per-file = 104857600

# max deflate compression level a client can negotiate (> values == > nsqd CPU usage)
max-deflate-level = 6

# maximum client configurable duration of time between client heartbeats
max-heartbeat-interval = "1m0s"

# maximum size of a single message in bytes
max-msg-size = 1024768

# maximum duration before a message will timeout
max-msg-timeout = "15m0s"

# maximum client configurable size (in bytes) for a client output buffer
max-output-buffer-size = 65536

# maximum client configurable duration of time between flushing to a client
max-output-buffer-timeout = "1s"

# maximum RDY count for a client
max-rdy-count = 2500

# maximum requeuing timeout for a message
max-req-timeout = "1h0m0s"

# number of messages to keep in memory (per topic/channel)
mem-queue-size = 10000

# duration to wait before auto-requeing a message
msg-timeout = "60s"

# enable snappy feature negotiation (client compression)
snappy = true

# UDP <addr>:<port> of a statsd daemon for pushing stats
# statsd-address = ""

# duration between pushing to statsd
statsd-interval = "60s"

# toggle sending memory and GC stats to statsd
statsd-mem-stats = true

# prefix used for keys sent to statsd (%s for host replacement)
statsd-prefix = "nsq.%s"

# number of messages per diskqueue fsync
sync-every = 2500

# duration of time per diskqueue fsync
sync-timeout = "2s"

# <addr>:<port> to listen on for TCP clients
tcp-address = "0.0.0.0:150"

# path to certificate file
# tls-cert = ""

# client certificate auth policy ('require' or 'require-verify')
# tls-client-auth-policy = ""

# path to private key file
# tls-key = ""

# require TLS for client connections
# tls-required = false

# path to private certificate authority pem
# tls-root-ca-file = ""

# enable verbose logging
# verbose = false

# unique identifier (int) for this worker (will default to a hash of hostname)
# worker-id = 0
